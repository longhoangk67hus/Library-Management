import React, { useState, useEffect } from 'react';
import './Dashboard.css';

const Dashboard = ({ onPageChange, userRole }) => {
  const [stats, setStats] = useState({
    totalBooks: 0,
    totalAuthors: 0,
    totalCategories: 0,
    activeBorrows: 0,
    overdueBorrows: 0,
    totalUsers: 0
  });
  const [recentActivities, setRecentActivities] = useState([]);
  const [popularBooks, setPopularBooks] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    // Simulate loading data
    setTimeout(() => {
      setStats({
        totalBooks: 1245,
        totalAuthors: 342,
        totalCategories: 28,
        activeBorrows: 89,
        overdueBorrows: 12,
        totalUsers: 156
      });

      setRecentActivities([
        { id: 1, type: 'borrow', user: 'Nguy·ªÖn VƒÉn A', book: 'Clean Code', time: '2 ph√∫t tr∆∞·ªõc', icon: 'üìö' },
        { id: 2, type: 'return', user: 'Tr·∫ßn Th·ªã B', book: 'Design Patterns', time: '15 ph√∫t tr∆∞·ªõc', icon: 'üìñ' },
        { id: 3, type: 'overdue', user: 'L√™ VƒÉn C', book: 'JavaScript Guide', time: '1 gi·ªù tr∆∞·ªõc', icon: '‚ö†Ô∏è' },
        { id: 4, type: 'borrow', user: 'Ph·∫°m Th·ªã D', book: 'React Handbook', time: '2 gi·ªù tr∆∞·ªõc', icon: 'üìö' },
        { id: 5, type: 'return', user: 'Ho√†ng VƒÉn E', book: 'Node.js Guide', time: '3 gi·ªù tr∆∞·ªõc', icon: 'üìñ' }
      ]);

      setPopularBooks([
        { id: 1, title: 'Clean Code', author: 'Robert Martin', borrows: 45, rating: 4.8 },
        { id: 2, title: 'Design Patterns', author: 'Gang of Four', borrows: 38, rating: 4.7 },
        { id: 3, title: 'JavaScript Guide', author: 'Douglas Crockford', borrows: 32, rating: 4.6 },
        { id: 4, title: 'React Handbook', author: 'Alex Banks', borrows: 28, rating: 4.5 },
        { id: 5, title: 'Node.js Guide', author: 'Kyle Simpson', borrows: 25, rating: 4.4 }
      ]);

      setLoading(false);
    }, 1000);
  }, []);

  const StatCard = ({ title, value, icon, color, trend }) => (
    <div className={`stat-card ${color}`}>
      <div className="stat-icon">
        <span>{icon}</span>
      </div>
      <div className="stat-content">
        <div className="stat-value">{loading ? '...' : value.toLocaleString()}</div>
        <div className="stat-title">{title}</div>
        {trend && (
          <div className={`stat-trend ${trend > 0 ? 'positive' : 'negative'}`}>
            {trend > 0 ? '‚ÜóÔ∏è' : '‚ÜòÔ∏è'} {Math.abs(trend)}%
          </div>
        )}
      </div>
    </div>
  );

  const ActivityItem = ({ activity }) => (
    <div className={`activity-item ${activity.type}`}>
      <div className="activity-icon">{activity.icon}</div>
      <div className="activity-content">
        <div className="activity-text">
          <strong>{activity.user}</strong>
          {activity.type === 'borrow' && ' ƒë√£ m∆∞·ª£n '}
          {activity.type === 'return' && ' ƒë√£ tr·∫£ '}
          {activity.type === 'overdue' && ' qu√° h·∫°n '}
          <em>{activity.book}</em>
        </div>
        <div className="activity-time">{activity.time}</div>
      </div>
    </div>
  );

  const BookItem = ({ book, index }) => (
    <div className="popular-book-item">
      <div className="book-rank">#{index + 1}</div>
      <div className="book-info">
        <div className="book-title">{book.title}</div>
        <div className="book-author">by {book.author}</div>
        <div className="book-stats">
          <span className="book-borrows">üìä {book.borrows} l∆∞·ª£t m∆∞·ª£n</span>
          <span className="book-rating">‚≠ê {book.rating}</span>
        </div>
      </div>
    </div>
  );

  if (loading) {
    return (
      <div className="dashboard loading">
        <div className="loading-spinner">
          <div className="spinner"></div>
          <p>ƒêang t·∫£i d·ªØ li·ªáu...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="dashboard">
      <div className="dashboard-header">
        <h1 className="dashboard-title">üìä Dashboard</h1>
        <p className="dashboard-subtitle">
          {userRole === 'admin' ? 'T·ªïng quan h·ªá th·ªëng th∆∞ vi·ªán' : 'Th√¥ng tin c√° nh√¢n v√† ho·∫°t ƒë·ªông m∆∞·ª£n s√°ch'}
        </p>
      </div>

      {/* Statistics Cards */}
      <div className="stats-grid">
        {userRole === 'admin' ? (
          <>
            <StatCard
              title="T·ªïng s·ªë s√°ch"
              value={stats.totalBooks}
              icon="üìö"
              color="primary"
              trend={8.2}
            />
            <StatCard
              title="T√°c gi·∫£"
              value={stats.totalAuthors}
              icon="‚úçÔ∏è"
              color="success"
              trend={3.1}
            />
            <StatCard
              title="Th·ªÉ lo·∫°i"
              value={stats.totalCategories}
              icon="üè∑Ô∏è"
              color="info"
              trend={1.5}
            />
            <StatCard
              title="ƒêang m∆∞·ª£n"
              value={stats.activeBorrows}
              icon="üìñ"
              color="warning"
              trend={-2.3}
            />
            <StatCard
              title="Qu√° h·∫°n"
              value={stats.overdueBorrows}
              icon="‚ö†Ô∏è"
              color="danger"
              trend={-15.7}
            />
            <StatCard
              title="Ng∆∞·ªùi d√πng"
              value={stats.totalUsers}
              icon="üë•"
              color="secondary"
              trend={12.4}
            />
          </>
        ) : (
          <>
            <StatCard
              title="S√°ch ƒëang m∆∞·ª£n"
              value={5}
              icon="üìñ"
              color="warning"
            />
            <StatCard
              title="L·ªãch s·ª≠ m∆∞·ª£n"
              value={23}
              icon="üìö"
              color="info"
            />
            <StatCard
              title="Qu√° h·∫°n"
              value={1}
              icon="‚ö†Ô∏è"
              color="danger"
            />
            <StatCard
              title="Y√™u th√≠ch"
              value={12}
              icon="‚ù§Ô∏è"
              color="success"
            />
          </>
        )}
      </div>

      <div className="dashboard-content">
        {/* Recent Activities */}
        <div className="dashboard-section">
          <div className="card">
            <div className="card-header">
              <h3>üîÑ {userRole === 'admin' ? 'Ho·∫°t ƒë·ªông g·∫ßn ƒë√¢y' : 'Ho·∫°t ƒë·ªông m∆∞·ª£n s√°ch c·ªßa b·∫°n'}</h3>
              <a href="#" className="view-all">Xem t·∫•t c·∫£</a>
            </div>
            <div className="card-body">
              <div className="activity-list">
                {recentActivities.map(activity => (
                  <ActivityItem key={activity.id} activity={activity} />
                ))}
              </div>
            </div>
          </div>
        </div>

        {/* Popular Books */}
        <div className="dashboard-section">
          <div className="card">
            <div className="card-header">
              <h3>üî• S√°ch ph·ªï bi·∫øn</h3>
              <a href="#" className="view-all">Xem chi ti·∫øt</a>
            </div>
            <div className="card-body">
              <div className="popular-books-list">
                {popularBooks.map((book, index) => (
                  <BookItem key={book.id} book={book} index={index} />
                ))}
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Quick Actions */}
      <div className="quick-actions">
        <h3 className="quick-actions-title">‚ö° Thao t√°c nhanh</h3>
        <div className="quick-actions-grid">
          {userRole === 'admin' && (
            <>
              <button 
                onClick={() => onPageChange && onPageChange('books')} 
                className="quick-action-card"
              >
                <div className="quick-action-icon">üìö</div>
                <div className="quick-action-text">Th√™m s√°ch m·ªõi</div>
              </button>
              <button 
                onClick={() => onPageChange && onPageChange('authors')} 
                className="quick-action-card"
              >
                <div className="quick-action-icon">‚úçÔ∏è</div>
                <div className="quick-action-text">Th√™m t√°c gi·∫£</div>
              </button>
            </>
          )}
          <button 
            onClick={() => onPageChange && onPageChange('borrowing')} 
            className="quick-action-card"
          >
            <div className="quick-action-icon">üîÑ</div>
            <div className="quick-action-text">M∆∞·ª£n s√°ch</div>
          </button>
          <button 
            onClick={() => onPageChange && onPageChange('borrowing')} 
            className="quick-action-card"
          >
            <div className="quick-action-icon">üìñ</div>
            <div className="quick-action-text">Tr·∫£ s√°ch</div>
          </button>
        </div>
      </div>
    </div>
  );
};

export default Dashboard;